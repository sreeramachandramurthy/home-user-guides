{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home User Guides","text":""},{"location":"centos/change-hostname/","title":"Change Hostname","text":"<p>Open Terminal and run the following commands</p> <pre><code>hostname\nhostnamectl set-hostname &lt;your-new-hostname&gt;\nsystemctl reboot\n</code></pre>"},{"location":"centos/disable-sleep/","title":"Disable Sleep when Laptop lid is closed","text":"<ul> <li>Open Terminal</li> <li>Edit file <code>vi /etc/systemd/logind.conf</code></li> </ul> <pre><code>HandleLidSwitch=ignore\n</code></pre> <ul> <li>Restart service <code>systemctl restart systemd-logind</code></li> </ul>"},{"location":"centos/ssh-banner/","title":"Customizing SSH Banner Message","text":"<ul> <li>Open Terminal</li> <li>Edit file <code>vi /etc/greetings.txt</code></li> </ul> <pre><code>#####################################\n#    WELCOME TO RAM-SERVER          #\n#####################################\n</code></pre> <ul> <li>Edit file <code>vi /etc/ssh/sshd_config</code></li> </ul> <pre><code>Banner /etc/greetings.txt\n</code></pre> <ul> <li>Restart service <code>systemctl restart sshd</code></li> </ul>"},{"location":"centos/static-ip/","title":"Configure Static IP Address in CentOS","text":"<ul> <li>Open Terminal</li> <li> <p>Navigate to the Network Scripts</p> <p><code>cd /etc/sysconfig/network-scripts</code></p> </li> <li> <p>Edit file <code>vi ifcfg-eth0</code> (or respective network adapter)</p> </li> </ul> <pre><code>ONBOOT=yes\nBOOTPROTO=static\nIPADDR=10.0.0.22\nNETMASK=255.255.255.0\nGATEWAY=10.0.0.1\nDNS1=10.0.0.1\n</code></pre> <ul> <li>Restart service <code>service network restart</code></li> <li>Confirm changes by running <code>ifconfig</code></li> </ul>"},{"location":"centos/temperature-sensors/","title":"CentOS Temperature Sensors","text":""},{"location":"centos/temperature-sensors/#cpu-temperature","title":"CPU Temperature","text":""},{"location":"centos/temperature-sensors/#install-lm-sensors","title":"Install LM Sensors","text":"<p><code>sudo yum install lm_sensors</code></p>"},{"location":"centos/temperature-sensors/#configure-lm-sensors","title":"Configure LM Sensors","text":"<p><code>sudo sensors-detect</code></p> <p>Say YES to all prompts</p>"},{"location":"centos/temperature-sensors/#get-current-cpu-temperature","title":"Get Current CPU Temperature","text":"<p><code>sensors</code></p>"},{"location":"centos/temperature-sensors/#monitor-cpu-temperatures","title":"Monitor CPU Temperatures","text":"<p><code>watch sensors</code></p>"},{"location":"centos/temperature-sensors/#hdd-temperature","title":"HDD Temperature","text":""},{"location":"centos/temperature-sensors/#install-hdd-temp","title":"Install HDD Temp","text":"<p><code>sudo yum install hddtemp</code></p>"},{"location":"centos/temperature-sensors/#get-current-hdd-temperature","title":"Get Current HDD Temperature","text":"<p><code>hddtemp</code></p>"},{"location":"centos/installation/install-docker-compose/","title":"Install Docker Compose","text":""},{"location":"centos/installation/install-docker-compose/#installation-steps","title":"Installation Steps","text":"<ul> <li> <p>Download the current stable release of Docker Compose</p> <p><code>sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose</code></p> </li> <li> <p>Apply executable permissions to the binary</p> <p><code>sudo chmod +x /usr/local/bin/docker-compose</code></p> </li> <li> <p>Check version</p> <p><code>docker-compose --version</code></p> </li> </ul>"},{"location":"centos/installation/install-docker-compose/#uninstallation","title":"Uninstallation","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo rm /usr/local/bin/docker-compose</code></li> </ul>"},{"location":"centos/installation/install-docker/","title":"Install Docker CE","text":""},{"location":"centos/installation/install-docker/#direct-installation","title":"Direct Installation","text":"<p>Install and update Docker from the YUM repository</p>"},{"location":"centos/installation/install-docker/#setup-the-yum-repository","title":"Setup the YUM Repository","text":"<ul> <li> <p>Install the <code>yum-utils</code> package (which provides the <code>yum-config-manager</code> utility) and set up the repository</p> <p><code>sudo yum install -y yum-utils</code></p> </li> <li> <p>Run <code>sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</code></p> </li> </ul>"},{"location":"centos/installation/install-docker/#install-docker-engine","title":"Install Docker Engine","text":"<ul> <li> <p>Install the latest version of Docker Engine and containerd</p> <p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p> </li> </ul> <p>If prompted to accept the GPG key, verify that the fingerprint matches <code>060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35</code>, and if so, accept it.</p> <p>Docker is installed but not started. The <code>docker</code> group is created, but no users are added to the group.</p>"},{"location":"centos/installation/install-docker/#start-docker","title":"Start Docker","text":"<ul> <li>Run <code>sudo systemctl start docker</code></li> </ul>"},{"location":"centos/installation/install-docker/#verify-docker-engine","title":"Verify Docker Engine","text":"<ul> <li>Run <code>sudo docker run hello-world</code></li> </ul> <p>This command downloads a test image and runs it in a container. When the container runs, it prints an informational message and exits.</p> <p>Docker Engine is installed and running. You need to use <code>sudo</code> to run Docker commands.</p>"},{"location":"centos/installation/install-docker/#post-installation","title":"Post Installation","text":"<p>The Docker daemon binds to a Unix socket instead of a TCP port. By default that Unix socket is owned by the user <code>root</code> and other users can only access it using <code>sudo</code>. The Docker daemon always runs as the <code>root</code> user.</p> <p>If you don\u2019t want to preface the <code>docker</code> command with <code>sudo</code>, create a Unix group called <code>docker</code> and add users to it. When the Docker daemon starts, it creates a Unix socket accessible by members of the <code>docker</code> group.</p>"},{"location":"centos/installation/install-docker/#create-the-docker-group","title":"Create the Docker Group","text":"<ul> <li>Run <code>sudo groupadd docker</code></li> </ul>"},{"location":"centos/installation/install-docker/#add-user-to-the-docker-group","title":"Add User to the Docker Group","text":"<ul> <li>Run <code>sudo usermod -aG docker $USER</code></li> </ul> <p>Log out and log back in so that your group membership is re-evaluated.</p> <ul> <li>If testing on a virtual machine, it may be necessary to restart the virtual machine for changes to take effect.</li> <li>On a desktop Linux environment such as X Windows, log out of your session completely and then log back in.</li> <li> <p>On Linux, you can also run the following command to activate the changes to groups</p> <p><code>newgrp docker</code></p> </li> </ul>"},{"location":"centos/installation/install-docker/#verify","title":"Verify","text":"<p>Verify that you can run docker commands without <code>sudo</code>.</p> <pre><code>`docker run hello-world`\n</code></pre> <p>This command downloads a test image and runs it in a container. When the container runs, it prints an informational message and exits.</p> <p>If you initially ran Docker CLI commands using <code>sudo</code> before adding your user to the docker group, you may see the following error, which indicates that your <code>~/.docker/</code> directory was created with incorrect permissions due to the <code>sudo</code> commands.</p> <pre><code>WARNING: Error loading config file: /home/user/.docker/config.json -\nstat /home/user/.docker/config.json: permission denied\n</code></pre> <p>To fix this problem, either remove the <code>~/.docker/</code> directory (it is recreated automatically, but any custom settings are lost), or change its ownership and permissions using the following commands:</p> <pre><code>sudo chown \"$USER\":\"$USER\" /home/\"$USER\"/.docker -R\nsudo chmod g+rwx \"$HOME/.docker\" -R\n</code></pre>"},{"location":"centos/installation/install-docker/#start-on-boot","title":"Start on Boot","text":"<p>Configure Docker to start on boot</p> <pre><code>sudo systemctl enable docker.service\nsudo systemctl enable containerd.service\n</code></pre> <p>To disable this behavior, use disable instead.</p> <pre><code>sudo systemctl disable docker.service\nsudo systemctl disable containerd.service\n</code></pre>"},{"location":"centos/installation/install-docker/#uninstall-docker-engine","title":"Uninstall Docker Engine","text":"<p>To uninstall the Docker Engine, CLI, and Containerd packages, run the below command</p> <pre><code>`sudo yum remove docker-ce docker-ce-cli containerd.io`\n</code></pre> <p>Images, containers, volumes, or customized configuration files on your host are not automatically removed. To delete all images, containers, and volumes, run the below command</p> <pre><code>sudo rm -rf /var/lib/docker\nsudo rm -rf /var/lib/containerd\n</code></pre> <p>You must delete any edited configuration files manually.</p>"},{"location":"centos/installation/install-docker/#references","title":"References","text":"<ul> <li>Install Docker CE on CentOS</li> <li>Post Install on Linux</li> </ul>"},{"location":"centos/installation/install-java/","title":"Install Java","text":""},{"location":"centos/installation/install-java/#installation-steps-for-java-18","title":"Installation Steps for Java 1.8","text":"<ul> <li>Open Terminal</li> <li>Run <code>yum install java-1.8.0-openjdk.x86_64</code></li> <li>Run <code>java -version</code> to check the Java version</li> </ul>"},{"location":"centos/installation/install-mongodb/","title":"Install MongoDB","text":""},{"location":"centos/installation/install-mongodb/#installation-steps","title":"Installation Steps","text":""},{"location":"centos/installation/install-mongodb/#add-mongodb-repo","title":"Add MongoDB Repo","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo vi /etc/yum.repos.d/mongodb-org.repo</code></li> <li>Add the below text to the file</li> </ul> <pre><code>[mongodb-org-4.2]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.2/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-4.2.asc\n</code></pre> <ul> <li>Run <code>yum repolist</code></li> </ul>"},{"location":"centos/installation/install-mongodb/#install-mongo-db","title":"Install Mongo DB","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo yum install mongodb-org</code></li> </ul>"},{"location":"centos/installation/install-mongodb/#configuration","title":"Configuration","text":"<ul> <li>Open Terminal</li> <li> <p>Edit MongoDB configuration file</p> <p><code>vi /etc/mongod.conf</code></p> </li> <li> <p>Change <code>bindIp</code> to the ip address of the machine.</p> </li> </ul>"},{"location":"centos/installation/install-mongodb/#service","title":"Service","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo systemctl enable mongod</code> to add the MongoDB service to StartUp</li> <li>Run <code>sudo systemctl start mongod</code> to start MongoDB service</li> <li>Run <code>sudo systemctl restart mongod</code> to restart MongoDB service</li> <li>Run <code>sudo systemctl stop mongod</code> to stop MongoDB service</li> </ul>"},{"location":"centos/installation/install-mongodb/#logs","title":"Logs","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo tail /var/log/mongodb/mongod.log</code> to tail the MongoDB logs</li> </ul>"},{"location":"centos/installation/install-mongodb/#firewall","title":"Firewall","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo firewall-cmd --zone=public --add-port=27017/tcp --permanent</code> to open port <code>27017</code></li> <li>Run <code>sudo firewall-cmd --reload</code> to reload firewall service and apply the firewall rules</li> </ul>"},{"location":"centos/installation/install-mongodb/#process","title":"Process","text":"<ul> <li>Open Terminal</li> <li>Run <code>ps -ef | grep mongo</code> to get the process ID of MongoDB</li> <li>Run <code>netstat -an | grep 27017</code> to check the MongoDB port</li> </ul>"},{"location":"centos/installation/install-mongodb/#references","title":"References","text":"<ul> <li>MongoDB Docs</li> <li>MongoDB 4.2 Docs</li> </ul>"},{"location":"centos/installation/install-python/","title":"Install Pyhton","text":""},{"location":"centos/installation/install-python/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Termial</li> <li>Run <code>sudo yum install epel-release</code></li> <li>Run <code>sudo yum install python</code></li> <li>Run <code>sudo yum install python-pip</code></li> <li>Run <code>sudo yum groupinstall 'development tools'</code></li> </ul>"},{"location":"centos/installation/install-python/#commands","title":"Commands","text":"<ul> <li>Version - <code>pip --version</code></li> <li>List of Installed Packages - <code>pip list</code></li> </ul>"},{"location":"centos/installation/install-robo3t/","title":"Install Robo3T","text":""},{"location":"centos/installation/install-robo3t/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Terminal</li> <li> <p>Create a directory for Robo 3T software</p> <p><code>sudo mkdir /opt/robo3t</code></p> </li> <li> <p>Download Robo3T from Robo3T website or use <code>wget</code></p> <p><code>wget https://download.studio3t.com/robomongo/linux/robo3t-1.4.3-linux-x86_64-48f7dfd.tar.gz</code></p> </li> <li> <p>Extract the downloaded tarball to the Robo3T directory <code>/opt/robo3t</code></p> <p><code>sudo tar xf robo3t-1.4.3-linux-x86_64-48f7dfd.tar.gz -C /opt/robo3t --strip-component=1</code></p> </li> <li> <p>Create symbolic links for Robo3T executable, so it can be run from anywhere</p> <p><code>sudo ln -s /opt/robo3t/bin/robo3t /usr/local/bin/robo3t</code></p> </li> </ul>"},{"location":"centos/installation/install-robo3t/#running-robo3t","title":"Running Robo3T","text":"<ul> <li>Open Terminal</li> <li>Run <code>robo3t</code></li> </ul> <p>If you are running Robo 3T on a headless server then you have to configure x11 forwarding with PuTTY and XMing to get the GUI output on to your client machine.</p>"},{"location":"centos/installation/install-robo3t/#workaround-for-centos","title":"Workaround for CentOS","text":"<p>Robo 3T 1.4.x fails to run in CentOS with the below error. The linux version of Robo3T supports only Ubuntu. To run on CentOS, execute the following commands in a new Terminal.</p> <p>robo3t: error while loading shared libraries: libcurl-gnutls.so.4: cannot open shared object file: No such file or directory</p> <ul> <li> <p>Search for the packages having <code>libcurl.so.4</code> library</p> <p><code>yum whatprovides */libcurl.so.4</code></p> </li> <li> <p>Install <code>libcurl</code></p> <p><code>sudo yum install libcurl</code></p> </li> <li> <p>It gets installed into <code>/usr/lib64</code></p> </li> <li> <p>Copy the missing library to Robo 3T directory</p> <p><code>sudo cp /usr/lib64/libcurl.so.4 /opt/robo3t/lib/libcurl-gnutls.so.4</code></p> </li> <li> <p>Run Robo 3T <code>robo3t</code></p> </li> </ul>"},{"location":"centos/installation/install-robo3t/#add-robo3t-to-applications","title":"Add Robo3T to Applications","text":"<ul> <li> <p>Download any Robo3T icon from Google Images and copy it to the <code>bin</code> directory of Robo 3T</p> <p><code>cp robo3t.png /opt/robo3t/bin/robo3t.png</code></p> </li> <li> <p>Create a new desktop file     <code>sudo vi /usr/share/applications/Robo3T.desktop</code></p> </li> <li> <p>Add the following content to the file</p> </li> </ul> <pre><code>[Desktop Entry]\nVersion=1.4.3\nName=Robo3T\nExec=/opt/robo3t/bin/robo3t\nTerminal=false\nType=Application\nStartupNotify=true\nCategories=Development;\nIcon=/opt/robo3t/bin/robo3t.png\nX-Desktop-File-Install-Version=0.15\n</code></pre>"},{"location":"centos/installation/install-vscode/","title":"Install Visual Studio Code","text":""},{"location":"centos/installation/install-vscode/#steps","title":"Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo yum install code</code></li> </ul>"},{"location":"ubuntu/softwares-list/","title":"Softwares List installed in Ubuntu","text":""},{"location":"ubuntu/softwares-list/#softwares","title":"Softwares","text":"<ul> <li>Libre Office</li> <li>Open JDK 1.8</li> <li>Git</li> <li>FileZilla</li> <li>Visual Studio Code</li> <li>Telegram</li> <li>Node</li> <li>VLC</li> <li>MKV ToolNix</li> <li>Transmission</li> <li>HPLIP</li> <li>Postman</li> <li>PuddleTag</li> <li>Sublime Text</li> <li>Termius</li> <li>BitWarden</li> </ul>"},{"location":"ubuntu/installation/install-discord/","title":"Install Discord","text":""},{"location":"ubuntu/installation/install-discord/#installation-steps","title":"Installation Steps","text":"<ul> <li>Download the package installer from https://discord.com/download</li> <li>Open Terminal</li> <li>Navigate to the downloaded path using the command <code>cd</code> <code>cd &lt;download-path&gt;</code></li> <li>Run <code>sudo apt install ./discord-*.deb</code> (replace * with exact version)</li> </ul>"},{"location":"ubuntu/installation/install-docker/","title":"Install Docker CE","text":""},{"location":"ubuntu/installation/install-docker/#install-using-the-apt-repository","title":"Install using the apt Repository","text":"<p>Before you install Docker Engine for the first time on a new host machine, you need to set up the Docker repository. Afterward, you can install and update Docker from the repository.</p>"},{"location":"ubuntu/installation/install-docker/#set-up-the-repository","title":"Set up the Repository","text":"<p>Update the apt package index and install packages to allow apt to use a repository over HTTPS</p> <ul> <li>Open Terminal<ul> <li>Run <code>sudo apt-get update</code></li> <li>Run <code>sudo apt-get install ca-certificates curl gnupg</code></li> </ul> </li> <li>Add Docker\u2019s official GPG key<ul> <li>Run <code>sudo install -m 0755 -d /etc/apt/keyrings</code></li> <li>Run <code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</code></li> <li>Run <code>sudo chmod a+r /etc/apt/keyrings/docker.gpg</code></li> </ul> </li> <li>Set up the Repository<ul> <li>Run <code>echo \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \"$(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\")\" stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</code></li> </ul> </li> </ul>"},{"location":"ubuntu/installation/install-docker/#install-docker-engine","title":"Install Docker Engine","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt-get update</code></li> <li>To install the latest version, run <code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</code></li> </ul>"},{"location":"ubuntu/installation/install-docker/#verify-installation","title":"Verify Installation","text":"<ul> <li>To verify that the Docker Engine installation is successful, run the <code>hello-world</code> image. <code>sudo docker run hello-world</code></li> </ul>"},{"location":"ubuntu/installation/install-docker/#start-on-boot","title":"Start on Boot","text":"<p>Configure Docker to start on boot</p> <ul> <li>Open Terminal</li> <li>Run <code>sudo systemctl enable docker.service</code></li> <li>Run <code>sudo systemctl enable containerd.service</code></li> </ul> <p>To disable this behavior, use disable instead.</p> <ul> <li>Run <code>sudo systemctl disable docker.service</code></li> <li>Run <code>sudo systemctl disable containerd.service</code></li> </ul>"},{"location":"ubuntu/installation/install-docker/#references","title":"References","text":"<ul> <li>https://docs.docker.com/engine/install/ubuntu/</li> <li>https://docs.docker.com/engine/install/linux-postinstall/</li> </ul>"},{"location":"ubuntu/installation/install-freecad/","title":"Install FreeCAD","text":""},{"location":"ubuntu/installation/install-freecad/#add-repository","title":"Add Repository","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo add-apt-repository ppa:freecad-maintainers/freecad-stable</code></li> <li>Run <code>sudo apt update</code></li> </ul>"},{"location":"ubuntu/installation/install-freecad/#installation","title":"Installation","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install freecad</code></li> </ul>"},{"location":"ubuntu/installation/install-freecad/#installation-of-offline-docs","title":"Installation of Offline Docs","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install freecad-doc</code></li> </ul>"},{"location":"ubuntu/installation/install-freecad/#run-freecad","title":"Run FreeCAD","text":"<ul> <li>Open Terminal</li> <li>Run <code>./freecad</code></li> </ul>"},{"location":"ubuntu/installation/install-git/","title":"Install GIT","text":""},{"location":"ubuntu/installation/install-git/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install git</code></li> </ul>"},{"location":"ubuntu/installation/install-git/#configure","title":"Configure","text":"<ul> <li>Open Terminal</li> <li>Run the below commands</li> </ul> <pre><code>git config --global user.email \"sreeramachandramurthy.chitturi@gmail.com\"\ngit config --global user.name \"Sree Ramachandra Murthy Chitturi\"\n</code></pre>"},{"location":"ubuntu/installation/install-glances/","title":"Glances","text":""},{"location":"ubuntu/installation/install-glances/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt-get install glances</code></li> </ul>"},{"location":"ubuntu/installation/install-glances/#enable-glances-web-ui","title":"Enable Glances Web UI","text":"<p>The Package version of Glances does not include the Web UI. Copy Web UI JS static files from full version of Glances to the current installed version.</p> <ul> <li>Open Terminal</li> <li>Capture the installed version of Glances <code>sudo glances -V</code></li> <li>Export the version to an environmental variable <code>export GLANCES_VERSION=\"X.X.X.X\"</code></li> <li>Download full version of Glances <code>wget https://github.com/nicolargo/glances/archive/refs/tags/v${GLANCES_VERSION}.tar.gz</code></li> <li>Extract the compressed file <code>tar zxvf v${GLANCES_VERSION}.tar.gz</code></li> <li>Copy Web UI JS static files to installation location <code>sudo cp -r glances-${GLANCES_VERSION}/glances/outputs/static/public/ /usr/lib/python3/dist-packages/glances/outputs/static/</code></li> <li>Open Web UI at <code>http://localhost:61208</code></li> </ul>"},{"location":"ubuntu/installation/install-glances/#enable-auto-start","title":"Enable Auto Start","text":"<ul> <li>Open Terminal</li> <li>Create a service file in <code>systemd</code> <code>sudo vi /etc/systemd/system/glances.service</code></li> </ul> <pre><code>[Unit]\nDescription=Glances\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/bin/glances -t 300 -w\nRestart=on-abort\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <ul> <li>Reload</li> </ul> <pre><code>sudo systemctl daemon-reload\nsudo systemctl stop glances.service\nsudo systemctl start glances.service\nsudo systemctl status glances.service\nsudo systemctl enable glances.service\n</code></pre>"},{"location":"ubuntu/installation/install-glances/#commands","title":"Commands","text":"Type Command Version <code>glances -V</code> Web Server <code>glances -w</code> Refresh Rate <code>glances -t 5</code> 5 seconds"},{"location":"ubuntu/installation/install-glances/#references","title":"References","text":"<ul> <li>Glances GitHub - https://github.com/nicolargo/glances</li> <li>Manual Web UI Installation - https://github.com/nicolargo/glances/issues/2021</li> <li>Autostart Glances - https://github.com/nicolargo/glances/wiki/Start-Glances-through-Systemd</li> </ul>"},{"location":"ubuntu/installation/install-gnome-shell-extensions/","title":"Install GNOME Shell Extensions","text":""},{"location":"ubuntu/installation/install-gnome-shell-extensions/#installation","title":"Installation","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install gnome-shell-extensions</code></li> </ul>"},{"location":"ubuntu/installation/install-influxdb/","title":"Install InfluxDB","text":""},{"location":"ubuntu/installation/install-influxdb/#install-influxdb-as-a-service","title":"Install InfluxDB as a Service","text":"<ul> <li>Update the Ubuntu System <code>sudo apt update</code></li> <li>Get Packages for Ubuntu  </li> </ul> <pre><code>wget -q https://repos.influxdata.com/influxdata-archive_compat.key\n\necho '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c &amp;&amp; cat influxdata-archive_compat.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg &gt; /dev/null\n\necho 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | sudo tee /etc/apt/sources.list.d/influxdata.list\n</code></pre> <ul> <li>Update the Ubuntu System <code>sudo apt update</code></li> <li>Install InfluxDB <code>sudo apt install influxdb2</code></li> <li>Check Version of InfluxDB <code>influx version</code></li> <li>Start the InfluxDB as a Service <code>sudo systemctl start influxdb</code></li> <li>Enable InfluxDB as a Service <code>sudo systemctl enable influxdb</code></li> <li>Verify the InfluxDB Installation <code>sudo service influxdb status</code></li> </ul>"},{"location":"ubuntu/installation/install-influxdb/#config-the-influxdb","title":"Config the InfluxDB","text":"<ul> <li>Start the Service <code>sudo service influxdb start</code></li> <li>Restart the Service <code>sudo service influxdb restart</code></li> <li>Stop the Service <code>sudo service influxdb stop</code></li> </ul>"},{"location":"ubuntu/installation/install-influxdb/#config-firewall","title":"Config Firewall","text":"<ul> <li>Whitelist InfluxDB in Firewall <code>sudo ufw allow 8086/tcp</code></li> </ul>"},{"location":"ubuntu/installation/install-influxdb/#gui","title":"GUI","text":"<p>http://localhost:8086</p>"},{"location":"ubuntu/installation/install-java/","title":"Install Java","text":""},{"location":"ubuntu/installation/install-java/#installation-steps","title":"Installation Steps","text":""},{"location":"ubuntu/installation/install-java/#install-java-common","title":"Install Java Common","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudp apt install java-common</code></li> </ul>"},{"location":"ubuntu/installation/install-java/#install-openjdk-8","title":"Install OpenJDK 8","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install openjdk-8-jdk</code></li> </ul>"},{"location":"ubuntu/installation/install-java/#install-openjdk-11","title":"Install OpenJDK 11","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install openjdk-11-jdk</code></li> </ul>"},{"location":"ubuntu/installation/install-java/#install-openjdk-18","title":"Install OpenJDK 18","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install openjdk-18-jdk</code></li> </ul>"},{"location":"ubuntu/installation/install-java/#java-alternatives","title":"Java Alternatives","text":"<ul> <li>Open Terminal</li> <li>To list Java versions run <code>update-java-alternatives --list</code></li> </ul>"},{"location":"ubuntu/installation/install-kodi/","title":"Install Kodi","text":"<pre><code>sudo apt install software-properties-common\nsudo add-apt-repository ppa:team-xbmc/ppa\nsudo apt install kodi\n</code></pre>"},{"location":"ubuntu/installation/install-mkdocs/","title":"Install MkDocs","text":""},{"location":"ubuntu/installation/install-mkdocs/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install python3</code></li> <li>Run <code>sudo apt install mkdocs</code></li> </ul>"},{"location":"ubuntu/installation/install-mkdocs/#installation-steps-python","title":"Installation Steps (Python)","text":"<ul> <li>Open Terminal</li> <li>Run <code>pip install mkdocs</code></li> <li>Run <code>pip install mkdocs-material</code></li> </ul>"},{"location":"ubuntu/installation/install-mkdocs/#commands","title":"Commands","text":"Action Command Create Project <code>mkdocs new &lt;project-name&gt;</code> Build Project <code>mkdocs build</code> Run Project <code>mkdocs serve</code>"},{"location":"ubuntu/installation/install-mysql-workbench/","title":"Install MySQL Workbench","text":""},{"location":"ubuntu/installation/install-mysql-workbench/#install-community-edition","title":"Install Community Edition","text":""},{"location":"ubuntu/installation/install-mysql-workbench/#installation-steps","title":"Installation Steps","text":"<ul> <li>Download the Debian Package from https://dev.mysql.com/downloads/workbench/</li> <li>Open Terminal</li> <li>Navigate to the location where the Debian Package was saved</li> <li>Run <code>sudo apt install ./&lt;package-name&gt;.deb</code></li> </ul>"},{"location":"ubuntu/installation/install-mysql-workbench/#notes","title":"Notes","text":"<p>The <code>dbgsym</code> package contains debug symbols. You can ignore the <code>dbgsym</code> package.</p>"},{"location":"ubuntu/installation/install-mysql/","title":"Install MySQL","text":""},{"location":"ubuntu/installation/install-mysql/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install mysql-server</code></li> <li>Run <code>mysql --version</code></li> <li>Run <code>sudo mysql_secure_installation</code></li> <li> <p>Run <code>sudo systemctl status mysql</code></p> </li> <li> <p><code>sudo mysql -u root</code></p> </li> <li><code>ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'yourpasswd';</code></li> </ul> <p>changing bind-address 127.0.0.1 to bind-address 0.0.0.0 in /etc/mysql/mysql.conf.d so that MySQL listens on all ports.</p>"},{"location":"ubuntu/installation/install-net-tools/","title":"Install Net Tools","text":""},{"location":"ubuntu/installation/install-net-tools/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install net-tools</code></li> </ul>"},{"location":"ubuntu/installation/install-openssh/","title":"Install Net Tools","text":""},{"location":"ubuntu/installation/install-openssh/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install openssh-server</code></li> </ul>"},{"location":"ubuntu/installation/install-python/","title":"Install Python","text":""},{"location":"ubuntu/installation/install-python/#installation-steps","title":"Installation Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install python3</code></li> <li>Run <code>sudo apt install python3-pip</code></li> </ul>"},{"location":"ubuntu/installation/install-snmp/","title":"Install SNMP","text":"<p>sudo apt-get update sudo apt-get install snmpd sudo nano /etc/snmp/snmpd.conf     agentAddress udp:161,udp6:[::1]:161     rocommunity public sudo service snmpd restart sudo service snmpd status</p> <p>Install the tools</p> <p>sudo apt-get install snmp-mibs-downloader</p> <p>SNMP usage</p> <p>snmpwalk -c public -v1 localhost | less</p>"},{"location":"ubuntu/installation/install-ubuntu-server/","title":"Migrate from Ubuntu Desktop to Ubuntu Server","text":""},{"location":"ubuntu/installation/install-ubuntu-server/#steps","title":"Steps","text":"<ul> <li>Open Terminal</li> <li>Run <code>sudo apt install ubuntu-server</code></li> <li>Run <code>reboot</code></li> <li>Run <code>sudo systemctl set-default multi-user.target</code></li> <li>Run <code>reboot</code></li> <li>Run <code>sudo apt purge ubuntu-desktop -y &amp;&amp; sudo apt autoremove -y &amp;&amp; sudo apt autoclean</code></li> <li>Run <code>reboot</code></li> </ul>"},{"location":"ubuntu/installation/install-vscode/","title":"Install VS Code","text":""},{"location":"ubuntu/installation/install-vscode/#installation-steps","title":"Installation Steps","text":"<ul> <li>Download the DEB package from https://code.visualstudio.com/download</li> <li>Open Terminal and navigate to the downloaded path</li> <li>Run <code>sudo apt install ./&lt;filename.deb&gt;</code></li> </ul>"}]}